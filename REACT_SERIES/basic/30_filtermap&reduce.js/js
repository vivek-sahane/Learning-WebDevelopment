
/*
const myNums = [1,2,3,4,5]


const newnum = myNums.filter((num) => num>4)
console.log(newnum);

// in curly braces we have to use return statement
const newNums = myNums.filter((num) =>{
    return num>4
})
console.log(newNums);
*/
/*

//like that dta is coming from database
const books = [
    {title: 'Book One', genre:'Fiction', publish:1981, edition:2024},
    {title: 'Book Two', genre:'Non-Fiction', publish:1992, edition: 2008},
    {title: 'Book Three', genre:'History', publish: 1999,edition:2007}
];

const userBooks = books.filter( (bk) => bk.genre === 'History' )

const userBookss = books.filter( (bk) => {
    return bk.publish >=1995 && bk.genre === 'History'
})

console.log(userBookss);




const myNumbers = [1,2,3,4,5,6]

const newNums = myNumbers.map( (num) => num + 10)
console.log(newNums);


const newN = myNumbers
                .map((num) => num * 10 )
                .map((num) => num+1)
                .filter((num)=> num >= 40)

                console.log(newN);
                */


//******************* Reduce ****************                

const myNums = [1,2,3]

// const myTotal = myNums.reduce(function (acc, currval) {
//     return acc + currval
// },0)

const myTotal = myNums.reduce( (acc,curr) => acc+curr,0)

console.log(myTotal);

const shoopingCart = [
    {
        itemName : "mobil dev course",
        price: 5999
    },
    {
        itemName : "data course",
        price: 2999
    }
]

const priceToPay = shoopingCart.reduce((acc,item) => acc + item.price,0)
    
console.log(priceToPay);

